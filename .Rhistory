anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f% ", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f %% ", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f%%", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %.2f%%", summary(m2)$r.squared*100)
GNPmancant <- dd2[is.na(dd2$GNP),]
predict(m2, newdata = GNPmancant)
aaa <- anova(lm(GNPmod~1),m2)
sprintf("La variancia dels residus Ã©s %f", resvar <- aaa$RSS[2]/aaa$Df[2])
aaa <- anova(lm(GNPmod~1),m2)
sprintf("The residual variance is %.2f", resvar <- aaa$RSS[2]/aaa$Df[2])
set.seed(123)
rnorm(n = 6, sd = resvar)
rnorm(n = 6, sd = resvar)
set.seed(123)
rnorm(n = 6, sd = resvar)
### k) Predictions with gaussian noise
```{r}
set.seed(123)
rnorm(n = 6, sd = resvar)
```
### k) Predictions with gaussian noise
```{r}
set.seed(123)
rnorm(n = 6, sd = resvar)
```
rnorm(n = 6, sd = resvar)
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
set.seed(123)
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
dd <- read.table("http://www-eio.upc.es/~jan/Data/MVA/kernels.dat", header=T)
head(dd)
knitr::opts_chunk$set(echo = TRUE)
cer <- read.csv("www-eio.upc.es/~jan/Data/MVA/Cereals.dat")
cer <- read.csv("https://www-eio.upc.es/~jan/Data/MVA/Cereals.dat")
cer <- read.table("https://www-eio.upc.es/~jan/Data/MVA/Cereals.dat")
cer <- read.table("http://www-eio.upc.es/~jan/Data/MVA/Cereals.dat")
head(cer)
cer <- read.csv("http://www-eio.upc.es/~jan/Data/MVA/Cereals.dat")
head(cer)
cer <- read.table("http://www-eio.upc.es/~jan/Data/MVA/Cereals.dat")
head(cer)
cer <- read.table("http://www-eio.upc.es/~jan/Data/MVA/Cereals.dat", header = T)
head(cer)
attach(cer)
head(cer)
dist(cer[,c(-1,-2)])
head(cer[,c(-1,-2)])
head(dist(cer[,c(-1,-2)]))
(dist(cer[,c(-1,-2)]))
cer[,c(-1,-2)] <- apply(cer[,c(-1,-2)], scale)
cer[,c(-1,-2)] <- apply(cer[,c(-1,-2)], 2, scale)
cor(cer[,c(-1,-2)])
cer[,c(-1,-2)] <- apply(cer[,c(-1,-2)], 2, scale)
dis <- dist(cer[,c(-1,-2)])
dis[1:5,1:5]
cer[,c(-1,-2)] <- apply(cer[,c(-1,-2)], 2, scale)
dis <- dist(cer[,c(-1,-2)])
dis[1:5]
dis
dim(dis)
length(dis)
as.matrix(dis)
dim(as.matrix(dis))
dis <- as.matrix(dist(cer[,c(-1,-2)])
cer[,c(-1,-2)] <- apply(cer[,c(-1,-2)], 2, scale)
dis <- as.matrix(dist(cer[,c(-1,-2)]))
dis[1:5,1:5]
head(cer)
cer[,c(-1,-2)] <- apply(cer[,c(-1,-2)], 2, scale)
cer[,c(-1,-2)] <- apply(cer[,c(-1,-2)], 2, scale)
dis <- as.matrix(dist(cer[,c(-1,-2)]))
dis[1:5,1:5]
hist(lower.tri(dis))
lower.tri(dis)
hist(dis[lower.tri(dis)])
hist(dis[lower.tri(dis)], main='histogram of distances')
hist(dis[lower.tri(dis)], main='histogram of distances', xlabel='')
hist(dis[lower.tri(dis)], main='histogram of distances', xlab='')
dis[dis>8]
hist(dis[lower.tri(dis)], main='histogram of distances', xlab='', breaks=20)
hist(dis[lower.tri(dis)], main='histogram of distances', xlab='', breaks=30)
dis[dis<1]
sum(dis[lower.tri(dis)]==0)
cmdscale(dis)
msd <- cmdscale(dis)
plot(msd[,1], msd[,2])
head(cer)
levels(Manufacturer)
cer$colors <- 'blue'
cer[Manufacturer=='G']$colors <- 'red'
cer$colors <- 'blue'
cer[,Manufacturer=='G']$colors <- 'red'
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=colors)
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=0, legend=c('Q', 'G', 'G'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=0, legend=c('Q', 'G', 'G'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=100, legend=c('Q', 'G', 'G'), col=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=4, legend=c('Q', 'G', 'G'), col=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=4, y=4, legend=c('Q', 'G', 'G'), col=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=0, y=4, legend=c('Q', 'G', 'G'), col=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=4, y=4, legend=c('Q', 'G', 'G'), col=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=4, y=0, legend=c('Q', 'G', 'G'), col=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1], msd[,2], labels=Manufacturer)
legend(x=4, y=0, legend=c('Q', 'G', 'G'), fill=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Manufacturer)
legend(x=4, y=0, legend=c('Q', 'G', 'G'), fill=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.1)
legend(x=4, y=0, legend=c('Q', 'G', 'G'), fill=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.3)
legend(x=4, y=0, legend=c('Q', 'G', 'G'), fill=c('blue', 'red', 'green'))
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.5)
legend(x=4, y=0, legend=c('Q', 'G', 'G'), fill=c('blue', 'red', 'green'))
which.min(dis)
which.min(dis[lower.tri(dis)])
which.min(msd)
which.min(msd, arr.ind=T)
which(msd=min(msd), arr.ind=T)
which(msd==min(msd), arr.ind=T)
nd <- as.matrix(dist(msd[,1:2]))
nd <- nd[lower.tri(nd)]
which(nd==min(nd), arr.ind=T)
nd
dim(nd)
nd <- as.matrix(dist(msd[,1:2]))
dim(nd)
nd <- as.matrix(dist(msd[,1:2]))
nd <- as.matrix(nd[lower.tri(nd)])
which(nd==min(nd), arr.ind=T)
nd[lower.tri(nd)]
lower.tri(nd)
dim(nd)
dim(lower.tri(nd))
dist(msd[,1:2])
dim(dist(msd[,1:2]))
as.matrix(dist(msd[,1:2]))
which(nd==min(nd)&&nd!=0, arr.ind=T)
nd <- as.matrix(dist(msd[,1:2]))
which(nd==min(nd)&&nd!=0, arr.ind=T)
nd <- as.matrix(dist(msd[,1:2]))
which(nd==min(nd)&nd!=0, arr.ind=T)
lower.tri(dis)
dim(lower.tri(dis))
dis[lower.tri(dis)]
dim(dis[lower.tri(dis)])
nd <- as.matrix(dist(msd[,1:2]))
which(nd==min(nd[nd!=0]), arr.ind=T)
nd <- as.matrix(dist(msd[,1:2]))
mins <- which(nd==min(nd[nd!=0]), arr.ind=T)
cer[mins[1],]
nd <- as.matrix(dist(msd[,1:2]))
mins <- which(nd==min(nd[nd!=0]), arr.ind=T)
cer[mins[,1],]
maxs <- which(nd==max(nd[nd!=0]), arr.ind=T)
cer[maxs[,1],]
msd <- cmdscale(dis, eig=T)
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis, eig=T)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.5)
legend(x=4, y=0, legend=c('Q', 'G', 'G'), fill=c('blue', 'red', 'green'))
nmsd <- cmdscale(dis, eig=T)
nmsd.eig
nmsd <- cmdscale(dis, eig=T)
nmsd$eig
nmsd <- cmdscale(dis, eig=T)
length(abs(nmsd$eig)<1e-13)
1e-13
nmsd <- cmdscale(dis, eig=T)
sum(abs(nmsd$eig)<1e-13)
nmsd <- cmdscale(dis, eig=T)
length(nmsd$eig)-sum(abs(nmsd$eig)<1e-13)
nmsd$eig
sum(nmsd$eig[1:2])/sum(nmsd$eig)
print("Eigenvalues")
nmsd$eig
print("Goodness of fit")
sum(nmsd$eig[1:2])/sum(nmsd$eig)
print("Eigenvalues\n")
nmsd$eig
print("Goodness of fit")
sum(nmsd$eig[1:2])/sum(nmsd$eig)
print("Eigenvalues")
nmsd$eig
print("Goodness of fit")
sum(nmsd$eig[1:2])/sum(nmsd$eig)
head(dis)
head(ndis)
plot(x=nd[lower.tri(nd)], y=dis[lower.tri(dis)])
plot(x=nd[lower.tri(nd)], y=dis[lower.tri(dis)])
abline(a=0,b=1)
plot(x=nd[lower.tri(nd)], y=dis[lower.tri(dis)])
abline(a=0,b=1, col='red')
plot(x=nd[lower.tri(nd)], y=dis[lower.tri(dis)], xlab='adjusted distances', ylab='observed distances')
abline(a=0,b=1, col='red')
dim(nd)
dim(dis)
mds2 <- isoMDS(cer[,c(-1,-2)])
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
mds2 <- isoMDS(cer[,c(-1,-2)])
mds2 <- isoMDS(dis)
plot(mds2[,1], mds[,2], col=cer$colors, xlab='', ylab='')
mds2 <- isoMDS(dis)
plot(mds2[,1], mds2[,2], col=cer$colors, xlab='', ylab='')
mds2
plot(mds2[,1], mds2[,2], col=cer$colors, xlab='', ylab='')
mds2 <- isoMDS(dis)
plot(mds2[,1], mds2[,2], col=cer$colors, xlab='', ylab='')
msd2[,1]
mds2[,1]
mds2
mds2[,1]
dim(mds2)
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(col=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=0,col=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=4,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=4, y=4,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=4, y=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
text(mds2$points[,1], mds2$points[,2], Brand)
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
text(mds2$points[,1], mds2$points[,2], Brand, cex=0.4)
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
text(mds2$points[,1]+0.2, mds2$points[,2]+0.2, Brand, cex=0.4)
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
text(mds2$points[,1]+0.2, mds2$points[,2]+0.2, Brand, cex=0.4)
print("stress")
print(mds2$stress, decimals=3)
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
text(mds2$points[,1]+0.2, mds2$points[,2]+0.2, Brand, cex=0.4)
print("stress")
print(mds2$stress, digits=3)
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'B'), fill=c("blue", "red", "green"))
text(mds2$points[,1]+0.2, mds2$points[,2]+0.2, Brand, cex=0.4)
print("stress")
print(mds2$stress)
nd2 <- as.matrix(dist(msd2[,1:2]))
nd2 <- as.matrix(dist(mds2[,1:2]))
nd2 <- as.matrix(dist(mds2$points[,1:2]))
mins <- which(nd2==min(nd2[nd2!=0]), arr.ind=T)
cer[mins[,1],]
cer$colors <- 'blue'
cer[Manufacturer=='G',]$colors <- 'red'
cer[Manufacturer=='K',]$colors <- 'green'
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.5)
legend(x=4, y=0, legend=c('Q', 'G', 'K'), fill=c('blue', 'red', 'green'))
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'K'), fill=c("blue", "red", "green"))
text(mds2$points[,1]+0.2, mds2$points[,2]+0.2, Brand, cex=0.4)
print("stress")
print(mds2$stress)
plot(x=nd2[lower.tri(nd2)], y=dis[lower.tri(dis)], xlab='adjusted distances', ylab='observed distances')
abline(a=0,b=1, col='red')
for i in 1:5 {
for (i in 1:5=) {
for (i in 1:5) {
print(isoMDS(dis, k=i)$stress)
}
stresses <- c()
for (i in 1:5) {
stresses <- c(stresses, isoMDS(dis, k=i)$stress)
}
plot(stresses)
stresses <- c()
for (i in 1:5) {
stresses <- c(stresses, isoMDS(dis, k=i)$stress)
}
print(stresses)
plot(stresses)
stresses <- c()
for (i in 1:5) {
stresses <- c(stresses, isoMDS(dis, k=i)$stress)
}
print(stresses)
plot(stresses, type='l')
stresses <- c()
for (i in 1:5) {
stresses <- c(stresses, isoMDS(dis, k=i)$stress)
}
print(stresses)
plot(stresses, type='l')
stresses <- c()
for (i in 1:15) {
stresses <- c(stresses, isoMDS(dis, k=i)$stress)
}
print(stresses)
plot(stresses, type='l')
stresses <- c()
for (i in 1:5) {
stresses <- c(stresses, isoMDS(dis, k=i)$stress)
}
print(stresses)
plot(stresses, type='l')
scatterplotMatrix(msd[,1], msd[,2])
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(car)
scatterplotMatrix(msd[,1], msd[,2])
scatterplotMatrix(msd[,1:2])
scatterplotMatrix(mds2$points)
scatterplotMatrix(cbind(msd[,1:2],mds2$points))
scatterplotMatrix(cbind(msd[,1:2],mds2$points))
cor(cbind(msd[,1:2],mds2$points))
dis <- sqrt(dis)
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.5)
legend(x=4, y=0, legend=c('Q', 'G', 'K'), fill=c('blue', 'red', 'green'))
nd <- as.matrix(dist(msd[,1:2]))
plot(x=nd[lower.tri(nd)], y=dis[lower.tri(dis)], xlab='adjusted distances', ylab='observed distances')
abline(a=0,b=1, col='red')
mds2 <- isoMDS(dis)
plot(mds2$points[,1], mds2$points[,2], col=cer$colors, xlab='', ylab='')
legend(x=5, y=0,legend=c('Q', 'G', 'K'), fill=c("blue", "red", "green"))
text(mds2$points[,1]+0.2, mds2$points[,2]+0.2, Brand, cex=0.4)
print("stress")
print(mds2$stress)
nd2 <- as.matrix(dist(mds2$points[,1:2]))
plot(x=nd2[lower.tri(nd2)], y=dis[lower.tri(dis)], xlab='adjusted distances', ylab='observed distances')
abline(a=0,b=1, col='red')
dis
sqrt(as.matrix(c(1,2)))
dis <- sqrt(dis)
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.5)
legend(x=4, y=0, legend=c('Q', 'G', 'K'), fill=c('blue', 'red', 'green'))
nd <- as.matrix(dist(msd[,1:2]))
plot(x=nd[lower.tri(nd)], y=dis[lower.tri(dis)], xlab='adjusted distances', ylab='observed distances')
abline(a=0,b=1, col='red')
dis <- dis^4
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.5)
legend(x=4, y=0, legend=c('Q', 'G', 'K'), fill=c('blue', 'red', 'green'))
nd <- as.matrix(dist(msd[,1:2]))
plot(x=nd[lower.tri(nd)], y=dis[lower.tri(dis)], xlab='adjusted distances', ylab='observed distances')
abline(a=0,b=1, col='red')
dis <- sqrt(dis)
msd <- cmdscale(dis)
plot(msd[,1], msd[,2], xlab='', ylab='', main='MSD', col=cer$colors)
text(msd[,1]+0.2, msd[,2]+0.2, labels=Brand, cex=0.5)
legend(x=4, y=0, legend=c('Q', 'G', 'K'), fill=c('blue', 'red', 'green'))
nd <- as.matrix(dist(msd[,1:2]))
plot(x=nd[lower.tri(nd)], y=dis[lower.tri(dis)], xlab='adjusted distances', ylab='observed distances')
abline(a=0,b=1, col='red')
