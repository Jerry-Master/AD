summary(lm(Alcmare~Pesmare, dd2))$coefficients[,1]
summary(lm(Alcmare~Pesmare, dd2))$coefficients[,2]
summary(lm(Alcmare~Pesmare, dd2))$coefficients[,4]
summary(lm(Alcmare~Pesmare, dd2))$coefficients[2,4]
dd2 <- read.table("PesAlcada.txt", header=T, na.string=-1)
sprintf("The correlation is now: %f", cor(dd2$Pesmare, dd2$Alcmare, use="na.or.complete"))
sprintf("With a p-value of %f, there is a significative relation", summary(lm(Alcmare~Pesmare, dd2))$coefficients[2,4])
with(dd, plot(Pesmare, Alcmare))
sprintf("There are %i students with missing values at either Pesmare or Alcmare", with(dd, sum(Pesmare == -1 | Alcmare == -1)))
sprintf("With a p-value of %f, there is a significative relation", summary(lm(Alcmare~Pesmare, dd))$coefficients[2,4])
with(dd, plot(Pesmare, Alcmare))
sprintf("There are %i students with missing values at either Pesmare or Alcmare", with(dd, sum(Pesmare == -1 | Alcmare == -1)))
sprintf("With a p-value of %f, there isn't a significative relation", summary(lm(Alcmare~Pesmare, dd))$coefficients[2,4])
dd3 <- dd2
dd3[is.na(dd3)] <- mean(dd3)
head(dd3)
dd3 <- dd2
dd3[is.na(dd3)] <- mean(dd3)
head(dd3[is.na(dd3)])
dd3 <- dd2
dd3[is.na(dd3)] <- mean(dd3)
head(dd3[is.na(dd3),])
dd3 <- dd2
dd3[is.na(dd3)] <- mean(dd3)
head(is.na(dd3))
dd3 <- dd2
dd3[is.na(dd3)] <- mean(dd3)
is.na(dd3)
dd3 <- dd2
dd3[is.na(dd3)]
dd3 <- dd2
dd3[is.na(dd3)] <- 0
head(dd3)
mean(dd2)
mean(dd2, na.rm=T)
mean(dd2, na.rm=T)
mean(dd2$Pesmare, na.rm=T)
colMeans(dd2, na.rm=T)
dd3 <- dd2
dd3[is.na(dd3)] <- colMeans(dd2, na.rm=T)
head(dd3)
dd3 <- dd2
with(dd3, Pesmare[is.na(Pesmare)] <- mean(Pesmare, na.rm=T))
head(dd3)
with(dd3, Pesmare[is.na(Pesmare)])
mean(dd3$Pesmare, na.rm=T)
dd3 <- dd2
with(dd3, Pesmare[is.na(Pesmare)] <- mean(dd3Pesmare, na.rm=T))
dd3 <- dd2
with(dd3, Pesmare[is.na(Pesmare)] <- mean(dd3$Pesmare, na.rm=T))
head(dd3)
dd3 <- dd2
with(dd3, Pesmare[is.na(Pesmare)] <- mean(Pesmare, na.rm=T))
head(dd3)
dd3 <- dd2
with(dd3, Pesmare[is.na(Pesmare)] <- mean(Pesmare, na.rm=T))
dd3
dd3 <- dd2
with(dd3, Pesmare[is.na(Pesmare)] <- mean(dd3$Pesmare, na.rm=T))
dd3
dd3 <- dd2
with(dd3, Pesmare[is.na(Alcmare)] <- mean(dd3$Alcmare, na.rm=T))
dd3
dd3 <- dd2
with(dd3, Alcmare[is.na(Alcmare)] <- mean(dd3$Alcmare, na.rm=T))
dd3
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
dd3
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
mean(dd3$Pesmare, na.rm=T)
mean(dd3$Pesmare, na.rm=TF
mean(dd3$Pesmare, na.rm=F)
mean(dd3$Pesmare)
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd2$Pesmare), var(dd2$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd2$Alcmare), var(dd2$Alcmare))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd2$Pesmare, na.rm=T), var(dd2$Pesmare, na.rm=T))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd2$Alcmare, na.rm=T), var(dd2$Alcmare, na.rm=T))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
dd3
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, plot(Pesmare, Alcmare))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, smooth=F))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, smooth=F, boxplot=F))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, smooth=F, pch=3))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, regLine=T))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, regLine=T, smoot=F))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, regLine=F, smoot=F))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, regLine=F))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, regLine=F, smooth=F))
sprintf("The new correlation is %f", with(dd3, cor(Pesmare, Alcmare)))
sprintf("The new correlation is %f", with(dd3, cor(Pesmare, Alcmare)))
sprintf("It is less than before, which was %f", cor(dd2$Pesmare, dd2$Alcmare, use="na.or.complete"))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, regLine=F))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, smooth=F))
dd3 <- dd2
dd3$Alcmare[is.na(dd3$Alcmare)] <- mean(dd3$Alcmare, na.rm=T)
dd3$Pesmare[is.na(dd3$Pesmare)] <- mean(dd3$Pesmare, na.rm=T)
sprintf("Mean: %f, Variance: %f, of Pesmare", mean(dd3$Pesmare), var(dd3$Pesmare))
sprintf("Mean: %f, Variance: %f, of Alcmare", mean(dd3$Alcmare), var(dd3$Alcmare))
with(dd3, scatterplot(Pesmare, Alcmare, smooth=T))
?matriu
?matrix
knitr::opts_chunk$set(echo = TRUE)
setwd("~/dades/linux/AD")
library(dplyr)
library(tidyr)
library(car)
dd <- read.table("kernel.dat", header=T)
dd <- read.table("kernel.dat", sep=";", header=T)
dd <- read.table("kernels.dat", sep=";", header=T)
head(dd)
dd <- read.table("kernels.dat", sep=';', header=T)
head(dd)
dd <- read.table("kernels.dat", sep=';')
head(dd)
dd <- read.table("kernels.dat", sep=' ')
head(dd)
dd <- read.table("kernels.dat", headers=T)
dd <- read.table("kernels.dat", header=T)
head(dd)
mean(dd)
apply(dd, mean)
apply(dd, fun=mean)
?apply
apply(dd, FUN=mean)
apply(dd, MARGIN=2, FUN=mean)
apply(dd, MARGIN=2, FUN=mean)
graphics.off()      # reset/close all graphical devices
?scale
scale(dd, T, F)
scale(dd, scale = c(F,F,F,F,F,F))
scale(dd, scale = c(F,F,F,F,F,F,F))
scale(dd, scale = rep(F,7))
scale(dd, scale = rep(F,7))
head(scale(dd, scale = rep(F,7)))
dd - dd
head(dd-apply(dd, MARGIN=2, FUN=mean))
head(scale(dd))
head(scale(dd, scale=FALSE))
apply(dd, MARGIN=2, FUN=mean)+head(scale(dd, scale=FALSE))
apply(dd, MARGIN=2, FUN=mean)[1,]+head(scale(dd, scale=FALSE))[1]
apply(dd, MARGIN=2, FUN=mean)[1]+head(scale(dd, scale=FALSE))[1,]
apply(dd, MARGIN=2, FUN=mean)[1]+head(scale(dd, scale=FALSE))[,1]
14.33+0.92
cor(dd)
cov(dd)
which.max(apply(dd, MARGIN=2, FUN=var))
sprintf("The variable with more variance is %s", which.max(apply(dd, MARGIN=2, FUN=var)$name)
sprintf("The variable with more variance is %s") which.max(apply(dd, MARGIN=2, FUN=var)$name)
sprintf("The variable with more variance is %s") which.max(apply(dd, MARGIN=2, FUN=var)$name)
sprintf("The variable with more variance is %s") which.max(apply(dd, MARGIN=2, FUN=var))
which.max(apply(dd, MARGIN=2, FUN=var))
which.max(apply(dd, MARGIN=2, FUN=var))$name
which.max(apply(dd, MARGIN=2, FUN=var))[1]
sprintf("The variable with more variance is %s"), which.max(apply(dd, MARGIN=2, FUN=var)))
sprintf("The variable with more variance is %s", which.max(apply(dd, MARGIN=2, FUN=var)))
)
name(which.max(apply(dd, MARGIN=2, FUN=var)))
names(which.max(apply(dd, MARGIN=2, FUN=var)))
sprintf("The variable with more variance is %s", names(which.max(apply(dd, MARGIN=2, FUN=var))))
scatterplot(dd)
scatterplotMatrix(dd)
?which
which(abs(cor(dd)) > 0.5)
which(abs(cor(dd)) > 0.5, arr.ind=T)
which(abs(cor(dd)) > 0.5, arr.ind=T, useNames = F)
which(abs(cor(dd)) > 0.5, useNames = F)
?arrayInd
x <- abs(cor(dd))>0.5
arrayInd(which(x), dim(x), dimnames(x), useNames = T)
x
which(x)
?scale
dds <- scale(dd)
head(dds)
cov(dds)
cor(dd)
scatterplotMatrix(dd)
abs(cor(dd)) > 0.5 # Strong linear correlation
cov(dds) == cor(dd)
abs(cov(dds)-cor(dd)) < 0.01
abs(cov(dds)-cor(dd)) < 0.001
abs(cov(dds)-cor(dd)) < 0.0001
abs(cov(dds)-cor(dd)) < 0.00001
abs(cov(dds)-cor(dd)) < 0.000001
abs(cov(dds)-cor(dd)) < 0.0000001
abs(cov(dds)-cor(dd)) < 0.00000001
abs(cov(dds)-cor(dd)) < 0.000000001
abs(cov(dds)-cor(dd)) < 0.0000000001
abs(cov(dds)-cor(dd)) < 0.00000000001
abs(cov(dds)-cor(dd)) < 0.000000000001
abs(cov(dds)-cor(dd)) < 0.0000000000001
abs(cov(dds)-cor(dd)) < 0.000000000000000001
dist(dd)
head(dist(dd))
dist(dd)[5,]
dist(dd)[,5]
typeof(dist(dd))
?dist
as.matrix(dist(dd))[5,]
as.matrix(dist(dd))[,5]
as.matrix(dist(dd[5,]))
as.matrix(dist(dd[1:5,]))
dist(dd[1:5,])
ddc <- scale(dd, scale=FALSE)
head(scale(ddc))
as.matrix(dist(dd[1:5,]))
as.matrix(dist(ddc[1:5,]))
as.matrix(dist(dds[1:5,]))
print("Centered")
as.matrix(dist(ddc[1:5,]))
print("Standardized")
as.matrix(dist(dds[1:5,]))
print("Centered")
as.matrix(dist(ddc[1:5,]))
print("\nStandardized")
as.matrix(dist(dds[1:5,]))
print("Centered")
as.matrix(dist(ddc[1:5,]))
print()
print("Centered")
as.matrix(dist(ddc[1:5,]))
print("")
print("Standardized")
as.matrix(dist(dds[1:5,]))
print("Centered")
as.matrix(dist(ddc[1:5,]))
print("Standardized")
as.matrix(dist(dds[1:5,]))
ddn <- scale(dd, center=FALSE)
head(ddn)
apply(ddn, MARGIN=2, FUN=mean)
apply(ddn, MARGIN=2, FUN=var)
mean(dd)
apply(dd, MARGIN=2, FUN=mean)
dd-apply(dd, MARGIN=2, FUN=mean)
dd[1,]-apply(dd, MARGIN=2, FUN=mean)[1]
dd[,1]-apply(dd, MARGIN=2, FUN=mean)[1]
dd[,1]
apply(dd, MARGIN=2, FUN=mean)[1]
15.26-14.33
ddc <- scale(dd, scale=FALSE)
head(ddc)
dd-apply(dd, MARGIN=2, FUN=mean)
dd[,3]-apply(dd, MARGIN=2, FUN=mean)[3]
as.matrix(apply(dd, MARGIN=2, FUN=mean))
as.matrix(apply(dd, MARGIN=2, FUN=mean)).T
as.matrix(apply(dd, MARGIN=2, FUN=mean)).transpose
?traspose
??traspose
t(as.matrix(apply(dd, MARGIN=2, FUN=mean)))
dd-t(as.matrix(apply(dd, MARGIN=2, FUN=mean)))
dd-rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))), length(dd[,1]))
rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))), length(dd[,1]))
t(as.matrix(apply(dd, MARGIN=2, FUN=mean)))
head(dd)
head(dd)-t(as.matrix(apply(dd, MARGIN=2, FUN=mean)))
as.matrix(head(dd))-t(as.matrix(apply(dd, MARGIN=2, FUN=mean)))
as.matrix(head(dd))
as.matrix(head(dd,1))
as.matrix(head(dd,1))-t(as.matrix(apply(dd, MARGIN=2, FUN=mean)))
as.matrix(head(dd))-rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))),6)
as.matrix(head(dd,1))-rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))),1)
as.matrix(head(dd,2))-rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))),2)
rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))),2)
as.matrix(head(dd,2))
as.matrix(head(dd,2))*-rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))),2)
as.matrix(head(dd,2))-*rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))),2)
as.matrix(head(dd,2))-rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))),2)
as.matrix(head(dd,2)).-rep(t(as.matrix(apply(dd, MARGIN=2, FUN=mean))),2)
head(apply(dd, MARGIN=2, '-', apply(dd, MARGIN=2, FUN=mean)))
m <- apply(dd, MARGIN=2, FUN=mean)
m
head(apply(dd, MARGIN=2, '-', m)
)
head(apply(dd, MARGIN=1, '-', m))
t(apply(dd, 1, '-', m))
t(t(dd)-m)
head(t(t(dd)-m))
head(dd-t(m)))
head(dd-t(m))
ddn <- t(t(dds)+apply(dd, MARGIN=2, FUN=mean))
head(ddn)
apply(ddn, MARGIN=2, FUN=mean)
apply(ddn, MARGIN=2, FUN=var)
apply(dd, MARGIN=2, FUN=mean)
ddn <- t(t(dds)+apply(dd, MARGIN=2, FUN=mean))
head(ddn)
apply(ddn, MARGIN=2, FUN=mean) == apply(dd, MARGIN=2, FUN=mean)
apply(ddn, MARGIN=2, FUN=var)
ddn <- t(t(dds)+apply(dd, MARGIN=2, FUN=mean))
head(ddn)
abs(apply(ddn, MARGIN=2, FUN=mean)-apply(dd, MARGIN=2, FUN=mean)) < 1e-7
apply(ddn, MARGIN=2, FUN=var)
ddn <- t(t(dds)+apply(dd, MARGIN=2, FUN=mean))
head(ddn)
apply(ddn, MARGIN=2, FUN=mean)
abs(apply(ddn, MARGIN=2, FUN=mean)-apply(dd, MARGIN=2, FUN=mean)) < 1e-7
apply(ddn, MARGIN=2, FUN=var)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(car)
graphics.off()      # reset/close all graphical devices
dd2 <- read.table("www-eio.upc.es/~jan/Data/MVA/PovertyStudy.dat", header = T)
dd2 <- read.csv("www-eio.upc.es/~jan/Data/MVA/PovertyStudy.dat", header = T)
dd2 <- read.csv("www-eio.upc.es/~jan/Data/MVA/PovertyStudy.dat", sep=";", header = T)
dd2 <- read.csv("www-eio.upc.es/~jan/Data/MVA/Infart.dat", sep=";", header = T)
dd2 <- read.csv("www-eio.upc.es/~jan/Data/MVA/Infart.csv", sep=";")
dd2 <- read.csv("www-eio.upc.es/~jan/Data/MVA/Infart.csv", sep=';')
dd2 <- read.csv("www-eio.upc.es/~jan/Data/MVA/Infart.csv", sep=' ')
dd2 <- read.csv("https://www-eio.upc.es/~jan/Data/MVA/Infart.csv", sep=' ')
dd2 <- read.table("https://www-eio.upc.es/~jan/Data/MVA/PovertyStudy.dat", header=T)
dd2 <- read.table("http://www-eio.upc.es/~jan/Data/MVA/PovertyStudy.dat", header=T)
head(dd2)
pairs(dd2)
dd2$GNP
sprintf("There are %i countries without GNP", sum(dd2$GNP == -99))
dd2$GNP[dd2$GNP == -99] <- NA
with(dd2, boxplot(GNP))
with(dd2, qqnorm(GNP))
library(MASS)
boxcox(lm(GNP~1, dd2),lambda = seq(-1, 1, by=0.1))
GNPmod <- log(dd2$GNP)
boxplot(GNPmod)
m2 <- lm(GNPmod~.-Country, dd2)
anova(lm(GNPmod~1), m2)
m2 <- lm(GNPmod~., dd2)
anova(lm(GNPmod~1), m2)
m2 <- lm(GNPmod~.-Country, dd2)
anova(lm(GNPmod~1), m2)
m2 <- lm(GNPmod~.-Country, dd2)
anova(lm(GNPmod~1), m2)
m2 <- lm(GNPmod~.-Country-GNP, dd2)
anova(lm(GNPmod~1), m2)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f", summary(m2)$r.squared)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f %", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f \%", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f% ", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f %% ", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %f%%", summary(m2)$r.squared*100)
m2 <- lm(GNPmod~Birth+Death+Infant+LifeEM+LifeEF, dd2)
anova(lm(GNPmod~1), m2)
sprintf("The percentage of variance of the data explained by the model is %.2f%%", summary(m2)$r.squared*100)
GNPmancant <- dd2[is.na(dd2$GNP),]
predict(m2, newdata = GNPmancant)
aaa <- anova(lm(GNPmod~1),m2)
sprintf("La variancia dels residus és %f", resvar <- aaa$RSS[2]/aaa$Df[2])
aaa <- anova(lm(GNPmod~1),m2)
sprintf("The residual variance is %.2f", resvar <- aaa$RSS[2]/aaa$Df[2])
set.seed(123)
rnorm(n = 6, sd = resvar)
rnorm(n = 6, sd = resvar)
set.seed(123)
rnorm(n = 6, sd = resvar)
### k) Predictions with gaussian noise
```{r}
set.seed(123)
rnorm(n = 6, sd = resvar)
```
### k) Predictions with gaussian noise
```{r}
set.seed(123)
rnorm(n = 6, sd = resvar)
```
rnorm(n = 6, sd = resvar)
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + rnorm(n = 6, sd = sqrt(resvar))
set.seed(123)
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
set.seed(123)
noise <- rnorm(n = 6, sd = sqrt(resvar))
predict(m2, newdata = GNPmancant) + noise
dd <- read.table("http://www-eio.upc.es/~jan/Data/MVA/kernels.dat", header=T)
head(dd)
